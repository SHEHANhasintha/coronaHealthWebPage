(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{113:function(e,r,t){t.r(r),function(e){t.d(r,"default",(function(){return w}));var a,o=t(0),n=t.n(o),p=t(260),i=t(255),s=t(252),c=t(251),l=t(184),d=t(219),u=t.n(d),f=t(244),m=t(250),b=t(218),h=t(24),g=t(22);(a="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&a(e);var y="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};function v(){return n.a.createElement(f.a,{variant:"body2",color:"textSecondary",align:"center"})}var x,j,O=Object(m.a)((function(e){return{paper:{paddingTop:e.spacing(18),display:"flex",flexDirection:"column",alignItems:"center"},avatar:{margin:e.spacing(1),backgroundColor:e.palette.secondary.main},form:{width:"100%",height:"100%",marginTop:e.spacing(1)},submit:{margin:e.spacing(3,0,2)}}}));function w(){var e=O();return n.a.createElement("div",null,n.a.createElement(h.a,null),n.a.createElement(b.a,{component:"main",maxWidth:"xs"},n.a.createElement(s.a,null),n.a.createElement("div",{className:e.paper},n.a.createElement(p.a,{className:e.avatar},n.a.createElement(u.a,null)),n.a.createElement(f.a,{component:"h1",variant:"h5"},"Verify User"),n.a.createElement(i.a,{href:"/login",fullWidth:!0,variant:"contained",color:"primary",className:e.submit},"Go to Login"),n.a.createElement(c.a,{container:!0})),n.a.createElement(l.a,{mt:8},n.a.createElement(v,null))),n.a.createElement(g.a,null))}y(w,"useStyles{classes}",(function(){return[O]})),(x="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(x.register(v,"Copyright","E:\\coronaHealthWebPage\\covidatlas\\src\\verify\\verify.js"),x.register(O,"useStyles","E:\\coronaHealthWebPage\\covidatlas\\src\\verify\\verify.js"),x.register(w,"SignIn","E:\\coronaHealthWebPage\\covidatlas\\src\\verify\\verify.js")),(j="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&j(e)}.call(this,t(10)(e))},184:function(e,r,t){var a=t(125),o=t(9),n=(t(21),t(123));var p=function(e){var r=function(r){var t=e(r);return r.css?Object(o.a)(Object(o.a)({},Object(n.a)(t,e(Object(o.a)({theme:r.theme},r.css)))),function(e,r){var t={};return Object.keys(e).forEach((function(a){-1===r.indexOf(a)&&(t[a]=e[a])})),t}(r.css,[e.filterProps])):t};return r.propTypes={},r.filterProps=["css"].concat(Object(a.a)(e.filterProps)),r};var i=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];var a=function(e){return r.reduce((function(r,t){var a=t(e);return a?Object(n.a)(r,a):r}),{})};return a.propTypes={},a.filterProps=r.reduce((function(e,r){return e.concat(r.filterProps)}),[]),a},s=t(122),c=t(133);function l(e,r){return r&&"string"==typeof r?r.split(".").reduce((function(e,r){return e&&e[r]?e[r]:null}),e):null}var d=function(e){var r=e.prop,t=e.cssProperty,a=void 0===t?e.prop:t,o=e.themeKey,n=e.transform,p=function(e){if(null==e[r])return null;var t=e[r],p=l(e.theme,o)||{};return Object(c.a)(e,t,(function(e){var r;return"function"==typeof p?r=p(e):Array.isArray(p)?r=p[e]||e:(r=l(p,e)||e,n&&(r=n(r))),!1===a?r:Object(s.a)({},a,r)}))};return p.propTypes={},p.filterProps=[r],p};function u(e){return"number"!=typeof e?e:"".concat(e,"px solid")}var f=i(d({prop:"border",themeKey:"borders",transform:u}),d({prop:"borderTop",themeKey:"borders",transform:u}),d({prop:"borderRight",themeKey:"borders",transform:u}),d({prop:"borderBottom",themeKey:"borders",transform:u}),d({prop:"borderLeft",themeKey:"borders",transform:u}),d({prop:"borderColor",themeKey:"palette"}),d({prop:"borderRadius",themeKey:"shape"})),m=i(d({prop:"displayPrint",cssProperty:!1,transform:function(e){return{"@media print":{display:e}}}}),d({prop:"display"}),d({prop:"overflow"}),d({prop:"textOverflow"}),d({prop:"visibility"}),d({prop:"whiteSpace"})),b=i(d({prop:"flexBasis"}),d({prop:"flexDirection"}),d({prop:"flexWrap"}),d({prop:"justifyContent"}),d({prop:"alignItems"}),d({prop:"alignContent"}),d({prop:"order"}),d({prop:"flex"}),d({prop:"flexGrow"}),d({prop:"flexShrink"}),d({prop:"alignSelf"}),d({prop:"justifyItems"}),d({prop:"justifySelf"})),h=i(d({prop:"gridGap"}),d({prop:"gridColumnGap"}),d({prop:"gridRowGap"}),d({prop:"gridColumn"}),d({prop:"gridRow"}),d({prop:"gridAutoFlow"}),d({prop:"gridAutoColumns"}),d({prop:"gridAutoRows"}),d({prop:"gridTemplateColumns"}),d({prop:"gridTemplateRows"}),d({prop:"gridTemplateAreas"}),d({prop:"gridArea"})),g=i(d({prop:"position"}),d({prop:"zIndex",themeKey:"zIndex"}),d({prop:"top"}),d({prop:"right"}),d({prop:"bottom"}),d({prop:"left"})),y=i(d({prop:"color",themeKey:"palette"}),d({prop:"bgcolor",cssProperty:"backgroundColor",themeKey:"palette"})),v=d({prop:"boxShadow",themeKey:"shadows"});function x(e){return e<=1?"".concat(100*e,"%"):e}var j=d({prop:"width",transform:x}),O=d({prop:"maxWidth",transform:x}),w=d({prop:"minWidth",transform:x}),k=d({prop:"height",transform:x}),E=d({prop:"maxHeight",transform:x}),W=d({prop:"minHeight",transform:x}),P=(d({prop:"size",cssProperty:"width",transform:x}),d({prop:"size",cssProperty:"height",transform:x}),i(j,O,w,k,E,W,d({prop:"boxSizing"}))),L=t(262),G=i(d({prop:"fontFamily",themeKey:"typography"}),d({prop:"fontSize",themeKey:"typography"}),d({prop:"fontStyle",themeKey:"typography"}),d({prop:"fontWeight",themeKey:"typography"}),d({prop:"letterSpacing"}),d({prop:"lineHeight"}),d({prop:"textAlign"})),K=t(115),S=t(0),H=t.n(S),N=t(117),T=t(33),C=t.n(T),R=t(257);function z(e,r){var t={};return Object.keys(e).forEach((function(a){-1===r.indexOf(a)&&(t[a]=e[a])})),t}var A=t(128),M=function(e){var r=function(e){return function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=t.name,n=Object(K.a)(t,["name"]);var p,i=a,s="function"==typeof r?function(e){return{root:function(t){return r(Object(o.a)({theme:e},t))}}}:{root:r},c=Object(R.a)(s,Object(o.a)({Component:e,name:a||e.displayName,classNamePrefix:i},n));r.filterProps&&(p=r.filterProps,delete r.filterProps),r.propTypes&&(r.propTypes,delete r.propTypes);var l=H.a.forwardRef((function(r,t){var a=r.children,n=r.className,i=r.clone,s=r.component,l=Object(K.a)(r,["children","className","clone","component"]),d=c(r),u=Object(N.a)(d.root,n),f=l;if(p&&(f=z(f,p)),i)return H.a.cloneElement(a,Object(o.a)({className:Object(N.a)(a.props.className,u)},f));if("function"==typeof a)return a(Object(o.a)({className:u},f));var m=s||e;return H.a.createElement(m,Object(o.a)({ref:t,className:u},f),a)}));return C()(l,e),l}}(e);return function(e,t){return r(e,Object(o.a)({defaultTheme:A.a},t))}},I=p(i(f,m,b,h,g,y,v,P,L.b,G)),B=M("div")(I,{name:"MuiBox"});r.a=B},218:function(e,r,t){var a=t(9),o=t(115),n=t(122),p=t(0),i=(t(21),t(117)),s=t(118),c=t(119),l=p.forwardRef((function(e,r){var t=e.classes,n=e.className,s=e.component,l=void 0===s?"div":s,d=e.disableGutters,u=void 0!==d&&d,f=e.fixed,m=void 0!==f&&f,b=e.maxWidth,h=void 0===b?"lg":b,g=Object(o.a)(e,["classes","className","component","disableGutters","fixed","maxWidth"]);return p.createElement(l,Object(a.a)({className:Object(i.a)(t.root,n,m&&t.fixed,u&&t.disableGutters,!1!==h&&t["maxWidth".concat(Object(c.a)(String(h)))]),ref:r},g))}));r.a=Object(s.a)((function(e){return{root:Object(n.a)({width:"100%",marginLeft:"auto",boxSizing:"border-box",marginRight:"auto",paddingLeft:e.spacing(2),paddingRight:e.spacing(2),display:"block"},e.breakpoints.up("sm"),{paddingLeft:e.spacing(3),paddingRight:e.spacing(3)}),disableGutters:{paddingLeft:0,paddingRight:0},fixed:Object.keys(e.breakpoints.values).reduce((function(r,t){var a=e.breakpoints.values[t];return 0!==a&&(r[e.breakpoints.up(t)]={maxWidth:a}),r}),{}),maxWidthXs:Object(n.a)({},e.breakpoints.up("xs"),{maxWidth:Math.max(e.breakpoints.values.xs,444)}),maxWidthSm:Object(n.a)({},e.breakpoints.up("sm"),{maxWidth:e.breakpoints.values.sm}),maxWidthMd:Object(n.a)({},e.breakpoints.up("md"),{maxWidth:e.breakpoints.values.md}),maxWidthLg:Object(n.a)({},e.breakpoints.up("lg"),{maxWidth:e.breakpoints.values.lg}),maxWidthXl:Object(n.a)({},e.breakpoints.up("xl"),{maxWidth:e.breakpoints.values.xl})}}),{name:"MuiContainer"})(l)},219:function(e,r,t){var a=t(134);Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=a(t(0)),n=(0,a(t(156)).default)(o.default.createElement("path",{d:"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"}),"VerifiedUser");r.default=n}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=6.bundle.js.map